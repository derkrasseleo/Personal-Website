// Generated by dts-bundle-generator v6.5.0

export interface IOperator {
	/** Readable name of the operator */
	name: string;
	/** Role of the operator.
	 *
	 *  Possible values are `Attacker`, `Defender` or `Recruit`
	 */
	role: "Attacker" | "Defender" | "Recruit";
	/** Shortened name of the operator's unit */
	unit: string;
	/** Object containing the health, speed and difficulty ratings. */
	ratings?: IOperatorRatings;
	/** Object containing metadata of the operator. */
	meta?: IOperatorMeta;
	/** Object containing biography of the operator. */
	bio?: IOperatorBio;
}
export interface IOperatorRatings {
	/** Health rating as a number between `1` and `3` */
	health: number;
	/** Speed rating as a number between `1` and `3` */
	speed: number;
	/** Difficulty rating as a number between `1` and `3` */
	difficulty: number;
}
export interface IOperatorMeta {
	/** Gender of the operator.
	 *
	 *  Possible values are:
	 *  ```
	 *  'm' - Male
	 *  'f' - Female
	 *  'o' - Other
	 *  'n' - None/Not applicable
	 *  'u' - Unknown
	 *  ```
	 */
	gender: "m" | "f" | "o" | "n" | "u";
	/** Country of the operator as a ISO 3166-1 alpha-2 code (two-letter).
	 * @link https://wikipedia.org/wiki/ISO_3166-1_alpha-2
	 */
	country: string;
	/** Season shorthandle when the operator was first introduced to the game.
	 *
	 *  As example, `Y1S1` for Year 1 Season 1.
	 */
	season: string;
	/** Height of the operator, in cm. */
	height: number;
	/** Weight of the operator, in cm. */
	weight: number;
	/** Object containing unlock prices for operators */
	price: {
		/** Renown unlock price for operator. */
		renown: 25000 | 20000 | 15000 | 10000 | 1000;
		/** R6 Credits unlock price for operator. */
		r6credits: 600 | 480 | 360 | 240 | 0;
	};
}
export interface IOperatorBio {
	/** Real name of the operator. */
	real_name: string;
	/** Birthplace of the operator, including the country.*/
	birthplace: string;
}
export interface Operator extends IOperator {
	/** ID of the operator. */
	id: string;
	/** SVG icon object. */
	svg: {
		/** SVG contents without HTML tags. */
		contents: string;
		/** SVG attributes as an object. */
		attributes: {
			[key: string]: unknown;
		};
	};
	/**
	 * Returns the current icon as an SVG string.
	 * @param userAttributes Object containing additional element attributes.
	 * @returns String containing the SVG element.
	 */
	toSVG(userAttributes?: Record<string, unknown>): string | Error;
}
export declare const ace: Operator;
export declare const alibi: Operator;
export declare const amaru: Operator;
export declare const aruni: Operator;
export declare const ash: Operator;
export declare const azami: Operator;
export declare const bandit: Operator;
export declare const blackbeard: Operator;
export declare const blitz: Operator;
export declare const buck: Operator;
export declare const capitao: Operator;
export declare const castle: Operator;
export declare const caveira: Operator;
export declare const clash: Operator;
export declare const doc: Operator;
export declare const dokkaebi: Operator;
export declare const echo: Operator;
export declare const ela: Operator;
export declare const finka: Operator;
export declare const flores: Operator;
export declare const frost: Operator;
export declare const fuze: Operator;
export declare const glaz: Operator;
export declare const goyo: Operator;
export declare const gridlock: Operator;
export declare const hibana: Operator;
export declare const iana: Operator;
export declare const iq: Operator;
export declare const jackal: Operator;
export declare const jager: Operator;
export declare const kaid: Operator;
export declare const kali: Operator;
export declare const kapkan: Operator;
export declare const lesion: Operator;
export declare const lion: Operator;
export declare const maestro: Operator;
export declare const maverick: Operator;
export declare const melusi: Operator;
export declare const mira: Operator;
export declare const montagne: Operator;
export declare const mozzie: Operator;
export declare const mute: Operator;
export declare const nokk: Operator;
export declare const nomad: Operator;
export declare const oryx: Operator;
export declare const osa: Operator;
export declare const pulse: Operator;
export declare const rook: Operator;
export declare const sledge: Operator;
export declare const smoke: Operator;
export declare const tachanka: Operator;
export declare const thatcher: Operator;
export declare const thermite: Operator;
export declare const thorn: Operator;
export declare const thunderbird: Operator;
export declare const twitch: Operator;
export declare const valkyrie: Operator;
export declare const vigil: Operator;
export declare const wamai: Operator;
export declare const warden: Operator;
export declare const ying: Operator;
export declare const zero: Operator;
export declare const zofia: Operator;
export declare const recruit_blue: Operator;
export declare const recruit_green: Operator;
export declare const recruit_orange: Operator;
export declare const recruit_red: Operator;
export declare const recruit_yellow: Operator;
/**
 * Returns the icon from the operator object as an SVG string.
 * @param op Object containing operator object.
 * @param userAttributes Object containing additional element attributes.
 * @returns String containing the SVG element.
 */
export declare function getSVGIcon(op: Operator, userAttributes?: {
	[key: string]: unknown;
}): string | Error;
declare const _default: {
	ace: Operator;
	alibi: Operator;
	amaru: Operator;
	aruni: Operator;
	ash: Operator;
	azami: Operator;
	bandit: Operator;
	blackbeard: Operator;
	blitz: Operator;
	buck: Operator;
	capitao: Operator;
	castle: Operator;
	caveira: Operator;
	clash: Operator;
	doc: Operator;
	dokkaebi: Operator;
	echo: Operator;
	ela: Operator;
	finka: Operator;
	flores: Operator;
	frost: Operator;
	fuze: Operator;
	glaz: Operator;
	goyo: Operator;
	gridlock: Operator;
	hibana: Operator;
	iana: Operator;
	iq: Operator;
	jackal: Operator;
	jager: Operator;
	kaid: Operator;
	kali: Operator;
	kapkan: Operator;
	lesion: Operator;
	lion: Operator;
	maestro: Operator;
	maverick: Operator;
	melusi: Operator;
	mira: Operator;
	montagne: Operator;
	mozzie: Operator;
	mute: Operator;
	nokk: Operator;
	nomad: Operator;
	oryx: Operator;
	osa: Operator;
	pulse: Operator;
	rook: Operator;
	sledge: Operator;
	smoke: Operator;
	tachanka: Operator;
	thatcher: Operator;
	thermite: Operator;
	thorn: Operator;
	thunderbird: Operator;
	twitch: Operator;
	valkyrie: Operator;
	vigil: Operator;
	wamai: Operator;
	warden: Operator;
	ying: Operator;
	zero: Operator;
	zofia: Operator;
	recruit_blue: Operator;
	recruit_green: Operator;
	recruit_orange: Operator;
	recruit_red: Operator;
	recruit_yellow: Operator;
};
export * from "@temp/modules";
export default _default;

export as namespace r6operators;

export {};
